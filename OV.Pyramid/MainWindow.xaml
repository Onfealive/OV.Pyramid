<Window x:Class="OV.Pyramid.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OV.Pyramid"
        xmlns:converters="clr-namespace:OV.Pyramid"
        mc:Ignorable="d"
        Title="OV.Land.Pyramid.Creation 1.0 Alpha" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize"
        Closed="Window_Closed">
    <Window.Resources>
        <local:ImageConverter x:Key="imageConverter"/>

        <Style x:Key="RotatedTab" TargetType="{x:Type TabItem}">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.LayoutTransform>
                                <RotateTransform Angle="90" />
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="3" />
        </Style>
        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
            <Border Name="Border" CornerRadius="0,0,0,0" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0,0,1,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Path Name="Arrow" Fill="#FF4682B4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                    <ContentPresenter Grid.Column="1"/>
                </Grid>
            </Border>
        </ControlTemplate>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <Border Name="Border" Grid.Row="0" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="0,0,0,0">
                                <ToggleButton IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" Background="#FF4682B4">
                                    <ToggleButton.Content>
                                        <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                                    </ToggleButton.Content>
                                </ToggleButton>
                            </Border>
                            <Border Name="Content" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SVStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
                            HorizontalAlignment="Right"
                            Opacity="0.5" 
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar Name="PART_HorizontalScrollBar"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal"
                            Opacity="0.5"
                            Grid.Row="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="AnimatedExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
            <Border x:Name="ExpanderButtonBorder"
        		Background="{TemplateBinding Background}"
        		BorderBrush="{TemplateBinding BorderBrush}"
        		BorderThickness="{TemplateBinding BorderThickness}"
        		Padding="{TemplateBinding Padding}"
                    >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="Transparent"
        				Grid.ColumnSpan="2"/>
                    <Ellipse x:Name="Circle"
        				Grid.Column="0"
        				Stroke="DarkGray"
        				Width="20"
        				Height="20"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center" />
                    <Path x:Name="Arrow"
        				Grid.Column="0"
        				Data="M 1,1.5 L 4.5,5 8,1.5"
        				Stroke="#FF666666"
        				StrokeThickness="2"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				RenderTransformOrigin="0.5,0.5"
                      >
                        <Path.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Path.RenderTransform>
                    </Path>
                    <ContentPresenter x:Name="HeaderContent"
        				Grid.Column="1"
        				Margin="4,0,0,0"
        				ContentSource="Content"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <!-- Animate arrow when toggled-->
                <Trigger Property="IsChecked"
                         Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

                <!-- MouseOver, Pressed behaviours-->
                <Trigger Property="IsMouseOver"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Arrow"/>
                </Trigger>
                <Trigger Property="IsPressed"
                                 Value="true">
                    <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                    <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                    <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="StretchyExpanderTemp" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton" 
        			DockPanel.Dock="Top"
        			Template="{StaticResource AnimatedExpanderButtonTemp}"
        			Content="{TemplateBinding Header}"
        			IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
        			OverridesDefaultStyle="True"
        			Padding="1.5,0"/>
                <ContentPresenter x:Name="ExpanderContent"
        			ContentSource="Content"
        			DockPanel.Dock="Bottom"
                                  >
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleY="0"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" 
                                                 From="0"
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TabItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#EAF6FD" Offset="0.15"/>
            <GradientStop Color="#D9F0FC" Offset=".5"/>
            <GradientStop Color="#BEE6FD" Offset=".5"/>
            <GradientStop Color="#A7D9F5" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
        <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
        <Style x:Key="DockTabControl" TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="4,4,4,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            <Setter Property="Background" Value="#F9F9F9"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <DockPanel x:Name="HeaderPanel"   IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Canvas Name="mainCanvas"  Width="974" Height="700" >
        <local:YGOView x:Name="RenderCard" Canvas.Left="15" Canvas.Top="44"></local:YGOView >

        <TextBlock Canvas.Left="15" TextWrapping="Wrap" Text="CARD LAYOUT" Canvas.Top="20"/>

        <Button x:Name="Exit" Height="60" Canvas.Left="886" Canvas.Top="32" Width="60" BorderBrush="Black" BorderThickness="1.5" />
        <Button Name="Home" Height="60" Canvas.Left="886" Canvas.Top="466" Width="60" BorderBrush="Black" BorderThickness="1.5" ></Button>
        <Button Name="Talk" Height="60" Canvas.Left="886" Canvas.Top="526" Width="60" BorderBrush="Black" BorderThickness="1.5"></Button>
        <Button Name="About" Height="60" Canvas.Left="886" Canvas.Top="586" Width="60" BorderBrush="Black" BorderThickness="1.5" ></Button>
        <Button Name="Export" Height="60" Canvas.Left="886" Canvas.Top="152" Width="60" BorderBrush="Black" BorderThickness="1.5" ></Button>
        <Button x:Name="Save" Height="60" Canvas.Left="886" Canvas.Top="212" Width="60" BorderBrush="Black" BorderThickness="1.5" />
        <Button x:Name="Load" Height="60" Canvas.Left="886" Canvas.Top="272" Width="60" BorderBrush="Black" BorderThickness="1.5" />


        <TabControl x:Name="tabControl" Height="640" Canvas.Left="445" Canvas.Top="20" Width="430"
                    Style="{DynamicResource DockTabControl}">
            <TabItem Header="Name &amp; Text">
                <StackPanel>
                    <Canvas Height="50">
                        <TextBox Name="NameEdit" FontSize="15" Canvas.Left="80" Canvas.Top="10" Width="330"
                        TextChanged="Name_TextBox_TextChanged"></TextBox>
                        <Label Content="Name" FontSize="14" Canvas.Left="10" Canvas.Top="9"/>
                    </Canvas>
                    <Canvas x:Name="DocumentCanvas" Width="360" Height="220">
                        <Button Name="DescriptionButton" IsEnabled="False" Width="170" Height="24"  Canvas.Left="20" Click="Description_Click">Description</Button>
                        <Button Name="PendulumEffectButton"  Width="170" Height="24" Click="PendulumEffectButton_Click" Canvas.Right="0">Pendulum Effect</Button>
                        <RichTextBox Name="DocumentBox" Canvas.Top="30" Canvas.Left="20" Height="120" Width="340"></RichTextBox>
                        <Button Canvas.Top="160" Canvas.Right="0" Click="ApplyDocument_Click">Apply</Button>
                    </Canvas>
                    <Canvas Height="50">
                        <TextBlock Canvas.Top="8" Canvas.Left="40" FontSize="14">ATK</TextBlock>
                        <TextBox Name="ATKBox" Width="70" FontSize="14" local:Masking.Mask="([0-9])|(^\?$)"
                                 Canvas.Left="76" Canvas.Top="5" MaxLength="4" TextAlignment="Right"
                                 TextChanged="ATK_TextBox_TextChanged" ></TextBox>
                        <TextBlock Canvas.Top="8" Canvas.Left="250" FontSize="14">DEF</TextBlock>
                        <TextBox Name="DEFBox" Width="70" FontSize="14" local:Masking.Mask="([0-9])|(^\?$)"
                                 Canvas.Left="286" Canvas.Top="5" MaxLength="4"
                                 TextChanged="DEF_TextBox_TextChanged" TextAlignment="Right"></TextBox>
                    </Canvas>
                </StackPanel>
            </TabItem>
            <TabItem Header="Card Details">
                <ScrollViewer MaxHeight="600" Width="Auto" VerticalScrollBarVisibility="Auto" Padding="10">
                    <StackPanel>
                        <Canvas x:Name="RarityCanvas" Height="160">
                            <Label Width="383" HorizontalContentAlignment="Center" FontSize="14">Rarity</Label>
                        </Canvas>
                        <Canvas x:Name="AttributeCanvas" Height="160">
                            <Label Width="383" HorizontalContentAlignment="Center" FontSize="14">Attribute</Label>
                        </Canvas>
                        <Canvas x:Name="MiddleCanvas" Height="210"/>
                        <Canvas x:Name="FrameCanvas" Height="162">
                            <Label Width="383" HorizontalContentAlignment="Center" FontSize="14">Frame</Label>
                        </Canvas>
                        <Canvas x:Name="TypeCanvas" Height="294">
                            <Label Width="383" HorizontalContentAlignment="Center" FontSize="14">Type</Label>
                        </Canvas>
                        <Canvas x:Name="AbilityCanvas" Height="152">
                            <Label Width="383" HorizontalContentAlignment="Center" FontSize="14">Ability</Label>
                        </Canvas>
                        <Canvas x:Name="ScaleCanvas" Height="192">
                            <Label Width="383" HorizontalContentAlignment="Center" FontSize="14">Pendulum Scale</Label>
                            <TextBox Name="ScaleLeftBox" local:Masking.Mask="^([1-9]|[0-1][0-2]|\?)$"  TextChanged="ScaleLeft_TextChanged" Width="40" TextAlignment="Right"></TextBox>
                            <TextBox Name="ScaleRightBox" local:Masking.Mask="^([1-9]|[0-1][0-2]|\?)$" TextChanged="ScaleRight_TextChanged"  Width="40"></TextBox>
                        </Canvas>
                        <Canvas x:Name="CirculationCanvas" Height="196">
                            <Label Width="383" HorizontalContentAlignment="Center" FontSize="14">Circulation</Label>
                            <TextBlock Canvas.Top="42">Edition</TextBlock>
                            <ComboBox Name="EditionCombo" Width="120" SelectionChanged="Edition_SelectionChanged"
                                              Canvas.Left="135" Canvas.Top="40"></ComboBox>
                            <TextBlock Canvas.Top="72">Card Number</TextBlock>
                            <TextBox Name="CardNumberEdit" Width="80" MaxLength="8" TextChanged="CardNumber_TextChanged"
                                             Canvas.Top="70" Canvas.Left="135"></TextBox>
                            <Button Canvas.Top="70" Canvas.Left="225" Click="Random_Click">Random</Button>
                            <TextBlock Canvas.Top="102">Set Number</TextBlock>
                            <TextBox Name="SetNumberEdit" Width="100" MaxLength="10" TextChanged="SetNumber_TextChanged"
                                             Canvas.Top="100" Canvas.Left="135"></TextBox>
                            <TextBlock Canvas.Top="102">Eye of Anubis Hologram</TextBlock>
                            <ComboBox Name="StickerCombo" Width="110" SelectionChanged="Sticker_SelectionChanged"
                                              Canvas.Top="132" Canvas.Left="135"></ComboBox>
                            <TextBlock Canvas.Top="162">Creator</TextBlock>
                            <CheckBox Name="CreatorCheckBox" Canvas.Top="162" Canvas.Left="135" Click="CreatorCheckBox_Checked">Display</CheckBox>
                        </Canvas>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Artwork">
                <Canvas>
                    <Border Canvas.Left="60" Canvas.Top="10" BorderThickness="1" BorderBrush="Black">
                        <Image Name="ControlArtwork" Stretch="Fill" Width="300" Height="300"></Image>
                    </Border>
                    <TextBox Name="ArtworkPath" MinLines="2" TextWrapping="Wrap" Canvas.Left="10" Canvas.Top="320" Width="320"
                             TextChanged="ArtworkPath_TextChanged"></TextBox>
                    <Button Canvas.Left="335" Canvas.Top="320" Width="75" Click="ArtworkBrowser_Click">Browse</Button>

                    <TextBlock Canvas.Left="10" TextWrapping="Wrap" Text="Reduce/Increase Height" Canvas.Top="366"/>
                    <TextBox x:Name="artworkPaddingHeight" Height="23" Canvas.Left="141" TextWrapping="Wrap" Text="0" TextAlignment="Right" Canvas.Top="363" Width="95"/>
                    <Button x:Name="previewResizeArtworkButton" Content="Preview" Canvas.Left="255" Canvas.Top="364" Width="75" Click="previewResizeArtworkButton_Click"/>
                    <Button x:Name="resizeArtworkButton" Content="Apply" Canvas.Left="335" Canvas.Top="363" Width="75" Click="resizeArtworkButton_Click"/>
                </Canvas>
            </TabItem>
            <TabItem Header="Set Detail">
                <Canvas Background="#FFE5E5E5">
                    <Label Canvas.Left="10" Canvas.Top="10">Name</Label>
                    <TextBox Canvas.Top="12" Canvas.Left="67" Width="343">Set Name</TextBox>

                    <ListView Name="cardList" Canvas.Left="10" Canvas.Top="66" Width="400"                         
                              SelectionChanged="cardList_SelectionChanged" SelectionMode="Single"
                             PreviewKeyDown="cardList_PreviewKeyDown">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Name" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}" Cursor="Hand" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn  Header="Artwork" Width="150">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding ArtworkByte, Converter={StaticResource imageConverter}}"
                                                   Width="60" Height="60"  Cursor="Hand" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Button x:Name="InsertNewCard" Content="+1 Card" Canvas.Left="335" Canvas.Top="39" Width="75"
                            Click="InsertNewCard_Click"/>
                </Canvas>
            </TabItem>
            <TabItem Header="Settings" HorizontalAlignment="Right">
                <Canvas></Canvas>
            </TabItem>
        </TabControl>
    </Canvas>
</Window>
